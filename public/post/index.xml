<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | 个人主页</title>
    <link>http://localhost:1313/post/</link>
      <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>zh-Hans</language><lastBuildDate>Mon, 01 Jul 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu7729264130191091259.png</url>
      <title>Blog</title>
      <link>http://localhost:1313/post/</link>
    </image>
    
    <item>
      <title>🎉 我的大四计划</title>
      <link>http://localhost:1313/post/my-plan/</link>
      <pubDate>Mon, 01 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/my-plan/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;旨在帮助大家学习Web技术, 大家就是这个框架了, 希望我录的完吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;不定时录制一些知名开源项目的使用教程, 例如Overleaf, Alist, 教大家如何看docs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-springboot快速入门&#34;&gt;1. &lt;strong&gt;SpringBoot快速入门&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Spring Boot基础&lt;/strong&gt;：快速创建Spring Boot应用，使用Spring Initializr生成项目骨架。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制器与路由&lt;/strong&gt;：创建RESTful API，理解&lt;code&gt;@RestController&lt;/code&gt;和&lt;code&gt;@RequestMapping&lt;/code&gt;的使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spring Boot自动配置&lt;/strong&gt;：了解Spring Boot如何自动配置常见组件（数据库连接池、消息队列等）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spring Data JPA&lt;/strong&gt;：使用Spring Data JPA操作数据库，理解&lt;code&gt;@Entity&lt;/code&gt;、&lt;code&gt;@Repository&lt;/code&gt;注解的使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spring Boot Actuator&lt;/strong&gt;：监控和管理Spring Boot应用的健康状况和指标。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-nginx快速入门&#34;&gt;2. &lt;strong&gt;Nginx快速入门&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nginx基础配置&lt;/strong&gt;：安装并配置Nginx，创建虚拟主机并设置不同的Server Block。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反向代理&lt;/strong&gt;：配置Nginx作为反向代理服务器，将请求转发到后端应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;负载均衡&lt;/strong&gt;：实现请求的负载均衡，配置多个后端服务器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL/TLS加密&lt;/strong&gt;：为Nginx配置SSL证书，支持HTTPS访问。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;静态文件服务&lt;/strong&gt;：配置Nginx作为静态文件服务器，处理图片、CSS、JavaScript等资源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常见Nginx优化技巧&lt;/strong&gt;：配置缓存、压缩、限流等，提高性能和可扩展性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-mybatis&#34;&gt;3. &lt;strong&gt;MyBatis&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;基础操作&lt;/strong&gt;：通过&lt;code&gt;@Mapper&lt;/code&gt;和XML映射文件进行CRUD操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态SQL&lt;/strong&gt;：使用&lt;code&gt;&amp;lt;if&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;choose&amp;gt;&lt;/code&gt;等标签生成动态SQL查询。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MyBatis与Spring集成&lt;/strong&gt;：在Spring Boot中集成MyBatis进行数据库操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-vuejs基础与进阶&#34;&gt;4. &lt;strong&gt;Vue.js基础与进阶&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Vue.js基本概念&lt;/strong&gt;：了解Vue组件、指令（v-if、v-for）、事件处理等基础知识。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vue Router&lt;/strong&gt;：配置前端路由，实现单页面应用（SPA）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vuex状态管理&lt;/strong&gt;：使用Vuex进行跨组件状态管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组件化开发&lt;/strong&gt;：编写和复用Vue组件，理解父子组件通信。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vue 3 Composition API&lt;/strong&gt;：学习Vue 3的新特性，使用Composition API进行组件逻辑复用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-spring-boot与vuejs集成&#34;&gt;5. &lt;strong&gt;Spring Boot与Vue.js集成&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;前后端分离架构&lt;/strong&gt;：在Spring Boot后端提供REST API，Vue.js前端进行数据展示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨域问题解决&lt;/strong&gt;：配置Spring Boot的CORS策略，允许Vue前端跨域访问后端API。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件上传与下载&lt;/strong&gt;：使用Spring Boot处理前端文件上传，Vue.js实现文件下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-spring-cloud微服务架构&#34;&gt;6. &lt;strong&gt;Spring Cloud微服务架构&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;服务注册与发现&lt;/strong&gt;：使用Eureka进行服务注册和发现，理解客户端负载均衡。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API网关&lt;/strong&gt;：通过Spring Cloud Gateway配置API网关，进行路由转发、过滤等操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置中心&lt;/strong&gt;：使用Spring Cloud Config管理集中化的配置文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-redis&#34;&gt;7. &lt;strong&gt;Redis&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;缓存与存储&lt;/strong&gt;：使用Redis作为缓存，提升数据访问速度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发布/订阅模式&lt;/strong&gt;：通过Redis实现服务之间的消息传递。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式锁&lt;/strong&gt;：使用Redis的SETNX命令实现分布式锁，防止并发问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久化机制&lt;/strong&gt;：配置Redis持久化策略（RDB、AOF）以保证数据持久性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-linux基础与运维&#34;&gt;8. &lt;strong&gt;Linux基础与运维&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Linux命令行操作&lt;/strong&gt;：掌握常用的Linux命令，进行文件操作、权限管理、进程监控等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nginx与Docker部署&lt;/strong&gt;：在Linux服务器上部署Nginx和Docker，配置Web应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;日志管理与分析&lt;/strong&gt;：学习如何配置和分析Linux日志，排查应用问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-前端技术栈html-css-javascript-vuejs-react&#34;&gt;9. &lt;strong&gt;前端技术栈（HTML, CSS, JavaScript, Vue.js, React）&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTML5与CSS3&lt;/strong&gt;：掌握HTML5标签和CSS3样式，布局和响应式设计。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JavaScript基础&lt;/strong&gt;：理解JavaScript的基本语法、数据类型、控制结构、函数等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vue.js与React框架&lt;/strong&gt;：深入了解Vue.js与React，学习组件化开发与状态管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;前端工程化&lt;/strong&gt;：使用Webpack、Babel等工具进行前端构建和优化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-docker与容器化开发&#34;&gt;10. &lt;strong&gt;Docker与容器化开发&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Docker基础&lt;/strong&gt;：理解Docker容器的概念，学习如何使用Docker命令构建、运行、管理容器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;：使用Docker Compose来管理多容器应用，简化多服务环境的搭建。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker与Spring Boot集成&lt;/strong&gt;：将Spring Boot应用打包成Docker镜像，实现跨平台部署。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker部署生产环境&lt;/strong&gt;：在生产环境中部署Docker容器，配置日志收集与监控。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
